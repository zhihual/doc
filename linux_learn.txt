2015-12-8
Hello word to study linux
Linux need write more logs since it's doc so much, but, not well organized like windows MSDN.
More detial need self save and keep record. 
En, a little bit slowly, but, not bad.:(

Put one good learning website link here:

http://blog.chinaunix.net/uid-25014876-id-59415.html
http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000

Github https link

https://github.com/zhihual/doc.git

2015-12-9
http://www.runoob.com/python/python-variable-types.html python guide website

Config git global settings

git config --global user.name "YOUR NAME"
git config --global user.email "YOUR EMAIL ADDRESS"

my expeirence on get code from github is,

git clone https://github.com/zhihual/doc.git

A great example of using forks to propose changes is for bug fixes. Rather than logging an issue for a bug you've found, you can:

Fork the repository.
Make the fix.
Submit a pull request to the project owner.

Clone https://github.com/zhihual/StockTrader.git as one focus projects

GIT 123 

初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
第二步，使用命令git commit，完成。 git commit -m

git status
git diff
git log --pretty=oneline
git reflog
git reset --hard commit_id


第一次修改 -> git add -> 第二次修改 -> git commit

add only put your changes into track, but, not add change not in track.
git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别


git checkout -- readme.txt 就是让这个文件回到最近一次git commit或git add时的状态。


git reset HEAD file can del change in cache, but you still need use git checkout to reserve to factory file.

git rm is use for del file.
If you del file by mistak, use git checkout -- filename can recover it.

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

if git merge has confilt, that means both branch has itself check-in, then, we need modify manuual, 
and git add and git commit again.  finally, git branch -d branchname


Ways to handle not complete code, but need create new branch to fix bug
一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；
另一种方式是用git stash pop，恢复的同时把stash内容也删了：
git stash apply stash@{0}

git branch -D <name>强行删除 force remove one branch


Push general way

查看远程库信息，使用git remote -v；
本地新建的分支如果不推送到远程，对其他人就是不可见的；
从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；
在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；
从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


Tag should be same as p4
命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；
git tag -a <tagname> -m "blablabla..."可以指定标签信息；
git tag -s <tagname> -m "blablabla..."可以用PGP签名标签；
命令git tag可以查看所有标签。


命令git push origin <tagname>可以推送一个本地标签；
命令git push origin --tags可以推送全部未推送过的本地标签；
命令git tag -d <tagname>可以删除一个本地标签；
命令git push origin :refs/tags/<tagname>可以删除一个远程标签。

Ignore files

在Git工作区的根目录下创建一个特殊的.gitignore文件
忽略某些文件时，需要编写.gitignore；

git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"

配置Git的时候，加上--global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。
配置文件放哪了？每个仓库的Git配置文件都放在.git/config文件中：
.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！









